// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calculate_onset_probs
NumericVector calculate_onset_probs(int tmax, double weibull_alpha, double weibull_sigma);
RcppExport SEXP _covback_calculate_onset_probs(SEXP tmaxSEXP, SEXP weibull_alphaSEXP, SEXP weibull_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_alpha(weibull_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_sigma(weibull_sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_onset_probs(tmax, weibull_alpha, weibull_sigma));
    return rcpp_result_gen;
END_RCPP
}
// calculate_probs_presymptomatic
NumericVector calculate_probs_presymptomatic(int tmax, double weibull_alpha, double weibull_sigma);
RcppExport SEXP _covback_calculate_probs_presymptomatic(SEXP tmaxSEXP, SEXP weibull_alphaSEXP, SEXP weibull_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_alpha(weibull_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_sigma(weibull_sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_probs_presymptomatic(tmax, weibull_alpha, weibull_sigma));
    return rcpp_result_gen;
END_RCPP
}
// calculate_serial_interval_probs
NumericVector calculate_serial_interval_probs(int tmax, double lnorm_mean, double lnorm_sd);
RcppExport SEXP _covback_calculate_serial_interval_probs(SEXP tmaxSEXP, SEXP lnorm_meanSEXP, SEXP lnorm_sdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< double >::type lnorm_mean(lnorm_meanSEXP);
    Rcpp::traits::input_parameter< double >::type lnorm_sd(lnorm_sdSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_serial_interval_probs(tmax, lnorm_mean, lnorm_sd));
    return rcpp_result_gen;
END_RCPP
}
// prob_not_left_per_day
NumericVector prob_not_left_per_day(NumericVector probs);
RcppExport SEXP _covback_prob_not_left_per_day(SEXP probsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type probs(probsSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_not_left_per_day(probs));
    return rcpp_result_gen;
END_RCPP
}
// prob_leave_on_day
NumericMatrix prob_leave_on_day(NumericVector probs, int tmax);
RcppExport SEXP _covback_prob_leave_on_day(SEXP probsSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type probs(probsSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_leave_on_day(probs, tmax));
    return rcpp_result_gen;
END_RCPP
}
// prob_leave_pre_symptoms
NumericMatrix prob_leave_pre_symptoms(NumericMatrix leave_matrix, NumericVector presymptom_probs);
RcppExport SEXP _covback_prob_leave_pre_symptoms(SEXP leave_matrixSEXP, SEXP presymptom_probsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type leave_matrix(leave_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type presymptom_probs(presymptom_probsSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_leave_pre_symptoms(leave_matrix, presymptom_probs));
    return rcpp_result_gen;
END_RCPP
}
// prob_leave_pre_symptoms_vector
NumericVector prob_leave_pre_symptoms_vector(NumericMatrix leave_matrix, NumericVector presymptom_probs);
RcppExport SEXP _covback_prob_leave_pre_symptoms_vector(SEXP leave_matrixSEXP, SEXP presymptom_probsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type leave_matrix(leave_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type presymptom_probs(presymptom_probsSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_leave_pre_symptoms_vector(leave_matrix, presymptom_probs));
    return rcpp_result_gen;
END_RCPP
}
// prob_daily_arrival
NumericVector prob_daily_arrival(NumericVector export_probs, NumericVector import_probs, int tmax);
RcppExport SEXP _covback_prob_daily_arrival(SEXP export_probsSEXP, SEXP import_probsSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type export_probs(export_probsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type import_probs(import_probsSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_daily_arrival(export_probs, import_probs, tmax));
    return rcpp_result_gen;
END_RCPP
}
// prob_arrive_pre_symptoms
NumericMatrix prob_arrive_pre_symptoms(NumericMatrix arrive_matrix, NumericVector presymptom_probs);
RcppExport SEXP _covback_prob_arrive_pre_symptoms(SEXP arrive_matrixSEXP, SEXP presymptom_probsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type arrive_matrix(arrive_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type presymptom_probs(presymptom_probsSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_arrive_pre_symptoms(arrive_matrix, presymptom_probs));
    return rcpp_result_gen;
END_RCPP
}
// prob_arrive_pre_symptoms_vector
NumericVector prob_arrive_pre_symptoms_vector(NumericMatrix arrive_matrix, NumericVector presymptom_probs);
RcppExport SEXP _covback_prob_arrive_pre_symptoms_vector(SEXP arrive_matrixSEXP, SEXP presymptom_probsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type arrive_matrix(arrive_matrixSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type presymptom_probs(presymptom_probsSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_arrive_pre_symptoms_vector(arrive_matrix, presymptom_probs));
    return rcpp_result_gen;
END_RCPP
}
// daily_exp_interval_cpp
NumericVector daily_exp_interval_cpp(double growth, int tmax, double t0);
RcppExport SEXP _covback_daily_exp_interval_cpp(SEXP growthSEXP, SEXP tmaxSEXP, SEXP t0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type growth(growthSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    rcpp_result_gen = Rcpp::wrap(daily_exp_interval_cpp(growth, tmax, t0));
    return rcpp_result_gen;
END_RCPP
}
// calculate_infection_incidence_time
NumericVector calculate_infection_incidence_time(double growth_rate, double growth_rate_imports, int tmax, double t0, double t0_import, double i0, NumericVector import_propns);
RcppExport SEXP _covback_calculate_infection_incidence_time(SEXP growth_rateSEXP, SEXP growth_rate_importsSEXP, SEXP tmaxSEXP, SEXP t0SEXP, SEXP t0_importSEXP, SEXP i0SEXP, SEXP import_propnsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type growth_rate(growth_rateSEXP);
    Rcpp::traits::input_parameter< double >::type growth_rate_imports(growth_rate_importsSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type t0_import(t0_importSEXP);
    Rcpp::traits::input_parameter< double >::type i0(i0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type import_propns(import_propnsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_infection_incidence_time(growth_rate, growth_rate_imports, tmax, t0, t0_import, i0, import_propns));
    return rcpp_result_gen;
END_RCPP
}
// calculate_local_from_import_infections
NumericVector calculate_local_from_import_infections(NumericVector imported_infections, NumericVector serial_probs, int tmax);
RcppExport SEXP _covback_calculate_local_from_import_infections(SEXP imported_infectionsSEXP, SEXP serial_probsSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type imported_infections(imported_infectionsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type serial_probs(serial_probsSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_local_from_import_infections(imported_infections, serial_probs, tmax));
    return rcpp_result_gen;
END_RCPP
}
// calculate_onset_incidence
NumericVector calculate_onset_incidence(NumericVector infections, NumericVector onset_probs, int tmax);
RcppExport SEXP _covback_calculate_onset_incidence(SEXP infectionsSEXP, SEXP onset_probsSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type infections(infectionsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type onset_probs(onset_probsSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_onset_incidence(infections, onset_probs, tmax));
    return rcpp_result_gen;
END_RCPP
}
// calculate_reporting_delay_matrix
NumericMatrix calculate_reporting_delay_matrix(NumericVector shapes, NumericVector scales);
RcppExport SEXP _covback_calculate_reporting_delay_matrix(SEXP shapesSEXP, SEXP scalesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type shapes(shapesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_reporting_delay_matrix(shapes, scales));
    return rcpp_result_gen;
END_RCPP
}
// calculate_confirmation_incidence
NumericVector calculate_confirmation_incidence(NumericVector onsets, int tmax, NumericMatrix report_delay_mat);
RcppExport SEXP _covback_calculate_confirmation_incidence(SEXP onsetsSEXP, SEXP tmaxSEXP, SEXP report_delay_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type onsets(onsetsSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type report_delay_mat(report_delay_matSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_confirmation_incidence(onsets, tmax, report_delay_mat));
    return rcpp_result_gen;
END_RCPP
}
// calculate_all_incidences
List calculate_all_incidences(double growth_rate, double t0, double i0, NumericVector import_cases, NumericVector onset_probs, NumericMatrix report_delay_mat, int tmax);
RcppExport SEXP _covback_calculate_all_incidences(SEXP growth_rateSEXP, SEXP t0SEXP, SEXP i0SEXP, SEXP import_casesSEXP, SEXP onset_probsSEXP, SEXP report_delay_matSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type growth_rate(growth_rateSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type i0(i0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type import_cases(import_casesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type onset_probs(onset_probsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type report_delay_mat(report_delay_matSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_all_incidences(growth_rate, t0, i0, import_cases, onset_probs, report_delay_mat, tmax));
    return rcpp_result_gen;
END_RCPP
}
// prob_not_symptomatic
double prob_not_symptomatic(double weibull_alpha, double weibull_sigma, double t);
RcppExport SEXP _covback_prob_not_symptomatic(SEXP weibull_alphaSEXP, SEXP weibull_sigmaSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type weibull_alpha(weibull_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_sigma(weibull_sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(prob_not_symptomatic(weibull_alpha, weibull_sigma, t));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_covback_calculate_onset_probs", (DL_FUNC) &_covback_calculate_onset_probs, 3},
    {"_covback_calculate_probs_presymptomatic", (DL_FUNC) &_covback_calculate_probs_presymptomatic, 3},
    {"_covback_calculate_serial_interval_probs", (DL_FUNC) &_covback_calculate_serial_interval_probs, 3},
    {"_covback_prob_not_left_per_day", (DL_FUNC) &_covback_prob_not_left_per_day, 1},
    {"_covback_prob_leave_on_day", (DL_FUNC) &_covback_prob_leave_on_day, 2},
    {"_covback_prob_leave_pre_symptoms", (DL_FUNC) &_covback_prob_leave_pre_symptoms, 2},
    {"_covback_prob_leave_pre_symptoms_vector", (DL_FUNC) &_covback_prob_leave_pre_symptoms_vector, 2},
    {"_covback_prob_daily_arrival", (DL_FUNC) &_covback_prob_daily_arrival, 3},
    {"_covback_prob_arrive_pre_symptoms", (DL_FUNC) &_covback_prob_arrive_pre_symptoms, 2},
    {"_covback_prob_arrive_pre_symptoms_vector", (DL_FUNC) &_covback_prob_arrive_pre_symptoms_vector, 2},
    {"_covback_daily_exp_interval_cpp", (DL_FUNC) &_covback_daily_exp_interval_cpp, 3},
    {"_covback_calculate_infection_incidence_time", (DL_FUNC) &_covback_calculate_infection_incidence_time, 7},
    {"_covback_calculate_local_from_import_infections", (DL_FUNC) &_covback_calculate_local_from_import_infections, 3},
    {"_covback_calculate_onset_incidence", (DL_FUNC) &_covback_calculate_onset_incidence, 3},
    {"_covback_calculate_reporting_delay_matrix", (DL_FUNC) &_covback_calculate_reporting_delay_matrix, 2},
    {"_covback_calculate_confirmation_incidence", (DL_FUNC) &_covback_calculate_confirmation_incidence, 3},
    {"_covback_calculate_all_incidences", (DL_FUNC) &_covback_calculate_all_incidences, 7},
    {"_covback_prob_not_symptomatic", (DL_FUNC) &_covback_prob_not_symptomatic, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_covback(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
