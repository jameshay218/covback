// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// daily_exp_interval_cpp
NumericVector daily_exp_interval_cpp(double growth, int tmax, double t0);
RcppExport SEXP _covback_daily_exp_interval_cpp(SEXP growthSEXP, SEXP tmaxSEXP, SEXP t0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type growth(growthSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    rcpp_result_gen = Rcpp::wrap(daily_exp_interval_cpp(growth, tmax, t0));
    return rcpp_result_gen;
END_RCPP
}
// calculate_infection_incidence
NumericVector calculate_infection_incidence(double growth_rate, double growth_rate_imports, int tmax, double t0, double t0_import, double i0, double import_propn, int imports_stop);
RcppExport SEXP _covback_calculate_infection_incidence(SEXP growth_rateSEXP, SEXP growth_rate_importsSEXP, SEXP tmaxSEXP, SEXP t0SEXP, SEXP t0_importSEXP, SEXP i0SEXP, SEXP import_propnSEXP, SEXP imports_stopSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type growth_rate(growth_rateSEXP);
    Rcpp::traits::input_parameter< double >::type growth_rate_imports(growth_rate_importsSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type t0_import(t0_importSEXP);
    Rcpp::traits::input_parameter< double >::type i0(i0SEXP);
    Rcpp::traits::input_parameter< double >::type import_propn(import_propnSEXP);
    Rcpp::traits::input_parameter< int >::type imports_stop(imports_stopSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_infection_incidence(growth_rate, growth_rate_imports, tmax, t0, t0_import, i0, import_propn, imports_stop));
    return rcpp_result_gen;
END_RCPP
}
// calculate_onset_incidence
NumericVector calculate_onset_incidence(NumericVector infections, double weibull_alpha, double weibull_sigma, int tmax);
RcppExport SEXP _covback_calculate_onset_incidence(SEXP infectionsSEXP, SEXP weibull_alphaSEXP, SEXP weibull_sigmaSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type infections(infectionsSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_alpha(weibull_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_sigma(weibull_sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_onset_incidence(infections, weibull_alpha, weibull_sigma, tmax));
    return rcpp_result_gen;
END_RCPP
}
// calculate_confirmation_incidence
NumericVector calculate_confirmation_incidence(NumericVector onsets, NumericVector shapes, NumericVector scales, int tmax);
RcppExport SEXP _covback_calculate_confirmation_incidence(SEXP onsetsSEXP, SEXP shapesSEXP, SEXP scalesSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type onsets(onsetsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type shapes(shapesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_confirmation_incidence(onsets, shapes, scales, tmax));
    return rcpp_result_gen;
END_RCPP
}
// calculate_all_incidences
List calculate_all_incidences(double growth_rate, double growth_rate_imports, double t0, double t0_import, double i0, double import_propn, int imports_stop, double weibull_alpha, double weibull_sigma, NumericVector shapes, NumericVector scales, int tmax);
RcppExport SEXP _covback_calculate_all_incidences(SEXP growth_rateSEXP, SEXP growth_rate_importsSEXP, SEXP t0SEXP, SEXP t0_importSEXP, SEXP i0SEXP, SEXP import_propnSEXP, SEXP imports_stopSEXP, SEXP weibull_alphaSEXP, SEXP weibull_sigmaSEXP, SEXP shapesSEXP, SEXP scalesSEXP, SEXP tmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type growth_rate(growth_rateSEXP);
    Rcpp::traits::input_parameter< double >::type growth_rate_imports(growth_rate_importsSEXP);
    Rcpp::traits::input_parameter< double >::type t0(t0SEXP);
    Rcpp::traits::input_parameter< double >::type t0_import(t0_importSEXP);
    Rcpp::traits::input_parameter< double >::type i0(i0SEXP);
    Rcpp::traits::input_parameter< double >::type import_propn(import_propnSEXP);
    Rcpp::traits::input_parameter< int >::type imports_stop(imports_stopSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_alpha(weibull_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type weibull_sigma(weibull_sigmaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type shapes(shapesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    Rcpp::traits::input_parameter< int >::type tmax(tmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(calculate_all_incidences(growth_rate, growth_rate_imports, t0, t0_import, i0, import_propn, imports_stop, weibull_alpha, weibull_sigma, shapes, scales, tmax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_covback_daily_exp_interval_cpp", (DL_FUNC) &_covback_daily_exp_interval_cpp, 3},
    {"_covback_calculate_infection_incidence", (DL_FUNC) &_covback_calculate_infection_incidence, 8},
    {"_covback_calculate_onset_incidence", (DL_FUNC) &_covback_calculate_onset_incidence, 4},
    {"_covback_calculate_confirmation_incidence", (DL_FUNC) &_covback_calculate_confirmation_incidence, 4},
    {"_covback_calculate_all_incidences", (DL_FUNC) &_covback_calculate_all_incidences, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_covback(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
